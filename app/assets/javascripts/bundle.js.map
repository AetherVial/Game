{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./javascripts/cursor.js","webpack:///./javascripts/enemy.js","webpack:///./javascripts/enemy2.js","webpack:///./javascripts/enemy3.js","webpack:///./javascripts/enemy4.js","webpack:///./javascripts/enemy_exposion.js","webpack:///./javascripts/enemy_particle.js","webpack:///./javascripts/game.js","webpack:///./javascripts/hud.js","webpack:///./javascripts/main.js","webpack:///./javascripts/menu.js","webpack:///./javascripts/particle.js","webpack:///./javascripts/player.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,KAAK;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEe,qE;;;;;;;;;;;;AC1Bf;AAAA;AAAA;AAA6C;AACX;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,S;AACA;;AAEA;AACA;AACA,6BAA6B,uDAAa;AAC1C;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,QAAQ;AACnC,iCAAiC,uDAAa;AAC9C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,S;;AAEA;;;;AAIA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACnInB;AAAA;AAAA;AAA6C;AAClB;;AAE3B;AACA,oBAAoB,8CAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,a;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,4BAA4B,SAAS;AACrC,iCAAiC,uDAAa;AAC9C;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,SAAS;AACpC,iCAAiC,uDAAa;AAC9C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;ACpIpB;AAAA;AAAA;AAAA;AAA2B;AACkB;AACS;;AAEtD;AACA,oBAAoB,8CAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6BAA6B,uDAAsB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AC7KpB;AAAA;AAAA;AAAA;AAA2B;AACkB;AACS;;AAEtD;AACA,oBAAoB,8CAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,uDAAa;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,UAAU;AACrC,iCAAiC,uDAAa;AAC9C;AACA;AACA;AACA,gCAAgC,UAAU;AAC1C,qCAAqC,uDAAa;AAClD;AACA;AACA,aAAa;AACb;AACA,gCAAgC,UAAU;AAC1C,qCAAqC,uDAAa;AAClD;AACA;AACA,aAAa;AACb;AACA,gCAAgC,UAAU;AAC1C,qCAAqC,uDAAa;AAClD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;;AAEA,6BAA6B,uDAAsB;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,K;;;AAGA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEe,oEAAK,E;;;;;;;;;;;;AC/MpB;AAAA;AAA6C;;AAE7C,oCAAoC,uDAAa;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,SAAS;AACpC,iCAAiC,uDAAa;AAC9C;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;;AAEe,oFAAqB,E;;;;;;;;;;;;AC7BpC;AAAA;AAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,4EAAa,E;;;;;;;;;;;;AClD5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8B;AACI;AACW;AACrB;AACI;AACE;AACA;AACA;;;AAG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK;AAC9B;;AAEA;AACA,8BAA8B,iDAAQ,sBAAsB,uDAAa;AACzE;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,+CAAM;AAChC;AACA,uBAAuB,4CAAG;AAC1B,0BAA0B,8CAAK;AAC/B;AACA,0BAA0B,+CAAM;AAChC;AACA,yBAAyB,+CAAM;AAC/B;AACA,0BAA0B,+CAAM;AAChC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,0CAA0C,iDAAQ;AAClD;AACA;AACA;AACA,0CAA0C,uDAAa;AACvD;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;AACA;AACA;AACA;AACA,K;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;ACvGnB;AAAA;AAA0B;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,kEAAG,E;;;;;;;;;;;;ACtClB;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC0B;AACA;AACI;;AAE9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;;;AAGA,yBAAyB,6CAAI;;;AAG7B;AACA,CAAC;;;;;;;;;;;;;;AC9BD;AAAA;AAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,KAAK;AAC/B;;AAEA;AACA;AACA,mCAAmC,6CAAI;AACvC,8BAA8B,6CAAI;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEe,mEAAI,E;;;;;;;;;;;;ACvFnB;AAAA;AAAA;AAA0B;AACI;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,uEAAQ,E;;;;;;;;;;;;AChEvB;AAAA;AAAA;AAAA;AAAkC;AACW;AACnB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,iDAAQ;AACzC;AACA,kCAAkC,iDAAQ;AAC1C;AACA,kCAAkC,iDAAQ;AAC1C,uC;AACA,aAAa;AACb,iCAAiC,iDAAQ;AACzC;AACA,kCAAkC,iDAAQ;AAC1C;AACA,kCAAkC,iDAAQ;AAC1C,uC;AACA,a;AACA,SAAS;AACT,6BAA6B,iDAAQ;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,2BAA2B,6CAAI;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,uDAAa;AAC3C;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,qEAAM,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./javascripts/main.js\");\n","const PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\n\nclass Cursor {\n    constructor(ctx, canvas) {\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.crosshair = [];\n        this.img = new Image();\n        this.img.src = `${PATH}/app/crosshair.png`;\n    }\n\n    setAim(e) {\n        let temp = this.canvas.getBoundingClientRect();\n        this.crosshair = [e.clientX - temp.x, e.clientY - temp.y];\n    }\n\n    draw() {\n        this.ctx.drawImage(this.img, 335, 268, 61, 64, this.canvas.width / 2, this.canvas.height / 2);\n    }\n\n    update() {\n\n    }\n\n}\n\nexport default Cursor","import EnemyParticle from './enemy_particle';\nimport Particle from './particle';\n\nconst PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\nclass Boss {\n    constructor(game, level) {\n        this.hp = 1000 * level;\n        this.og_hp = 1000 * level;\n        this.r = 75;\n        this.pos = [game.canvas.width - 150, game.canvas.height - 150];\n        this.x = this.pos[0];\n        this.y = this.pos[1];\n        this.y_speed = .3;\n        this.ctx = game.ctx;\n        this.game = game;\n        this.alive = true;\n        this.up = true;\n        this.loaded = true;\n        this.loaded2 = true;\n        this.sheet = new Image();\n        this.sheet.src = `${PATH}/app/wizard.png`;\n        this.coords_x = 0;\n        this.coords_y = 0;\n        this.forward = true;\n        this.frames = 0;\n    }\n\n    move(dt) {\n        if (this.up) {\n            this.y = this.y - (this.y_speed * .75) * dt\n        } else {\n            this.y = this.y + (this.y_speed * .75) * dt\n        }\n    }\n\n    update(dt) {\n        this.checkDead();\n        if (this.y >= this.game.canvas.height - 150) {\n            this.up = true;\n        } else if (this.y <= 150) {\n            this.up = false;\n        }\n        if (this.frames === 10) {\n            if (this.forward) {\n                this.coords_x = this.coords_x + 80;\n                if (this.coords_x === 720) {\n                    this.forward = !this.forward;\n                }\n            } else if (!this.forward) {\n                this.coords_x = this.coords_x - 80;\n                if (this.coords_x === 80) {\n                    this.forward = true;\n                }\n            }\n            this.frames = 0;\n        }\n        this.move(dt);\n        this.fire2();\n        this.fire();\n        this.frames = this.frames + 1;\n    }\n\n    checkDead() {\n        if (this.hp <= 0) {\n            this.alive = false;\n            this.pos = [];\n            this.x = null;\n            this.y = null;\n            this.r = 0;\n            this.game.enemies.shift();\n            this.game.enemies.push(new Boss(this.game, this.game.level));\n            this.game.player.hp += 100;\n            setTimeout(() => {\n                this.game.enemy = this.game.enemies[0];\n                this.game.particles.push(this.game.enemy);\n            }, 5000)\n        }   \n    }\n\n    fire() {\n        if (this.loaded) {\n            let bullet = new EnemyParticle(game, 50, [this.x, this.y], [-1, 0]);\n            this.game.add(bullet);\n            this.loaded = false;\n            setTimeout(() => {\n                this.loaded = true;\n            }, 2000)\n        } else {\n            return;\n        }\n    }\n\n    fire2() {\n        if (this.loaded2) {\n            for (let i = 0; i < 90; i+=10) {\n                let bullet = new EnemyParticle(game, 10, [this.x, this.y], [-1, Math.cos(i)]);\n                this.game.add(bullet);\n            }\n            this.loaded2 = false;\n            setTimeout(() => {\n                this.loaded2 = true;\n            }, 1500)\n        } \n\n    }\n\n\n\n    draw() {\n        this.ctx.save();\n        if (this.sheet.complete) {\n            this.ctx.drawImage(this.sheet, this.coords_x, this.coords_y, 80, 80, this.x - 150, this.y - 150, 300, 300);\n        } else {\n            let ctx = this.ctx;\n            let sheet = this.sheet;\n            ctx.drawImage(\n                sheet, \n                this.coords_x, \n                this.coords_y, \n                80, 80, \n                this.x - 150, \n                this.y - 150, 300, 300);\n        }\n\n        // this.ctx.stroke();\n        // this.ctx.fill();\n        this.ctx.closePath();\n        this.ctx.restore();\n    }\n}\n\nexport default Boss;","import EnemyParticle from './enemy_particle';\nimport Boss from './enemy';\n\nconst PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\nclass Boss2 extends Boss{\n    constructor(game, level) {\n        super(game, level);\n        this.hp = 2500 * level;\n        this.og_hp = 2500 * level;\n        this.r = 100;\n        this.pos = [game.canvas.width / 4, game.canvas.height / 4];\n        this.x = this.pos[0]\n        this.y = this.pos[1]\n        this.y_speed = .3;\n        this.ctx = game.ctx;\n        this.game = game;\n        this.alive = true;\n        this.up = true;\n        this.loaded = true;\n        this.loaded2 = true;\n        \n        this.sheet = new Image();\n        this.sheet.src = `${PATH}/app/demon-idle.png`;\n        this.coords_x = 0;\n        this.coords_y = 0;\n        this.forward = true;\n        this.frames = 0;\n    }\n\n    move(dt) {\n        if (this.up) {\n            this.y = this.y - this.y_speed * dt\n        } else {\n            this.y = this.y + this.y_speed * dt\n        }\n    }\n\n    update(dt) {\n        this.checkDead();\n        if (this.y >= this.game.canvas.height - this.r) {\n            this.up = true;\n        } else if (this.y <= this.r) {\n            this.up = false;\n        }\n        if (this.frames === 10) {\n            if (this.forward) {\n                this.coords_x = this.coords_x + 160;\n                if (this.coords_x === 800) {\n                    this.forward = !this.forward;\n                }\n            } else if (!this.forward) {\n                this.coords_x = this.coords_x - 160;\n                if (this.coords_x === 160) {\n                    this.forward = true;\n                }\n            }\n            this.frames = 0;\n        }\n        this.move(dt);\n        this.fire2();\n        this.fire();\n        this.frames = this.frames + 1;\n    }\n\n    checkDead() {\n        if (this.hp <= 0) {\n            this.alive = false;\n            this.pos = [];\n            this.x = null;\n            this.y = null;\n            this.r = 0;\n            this.game.enemies.shift();\n            this.game.enemies.push(new Boss2(this.game, this.game.level));\n\n            if (!this.game.player.powerUp1) {\n                this.game.player.powerUp1 = true;\n            }   \n            \n            setTimeout(() => {\n                this.game.enemy = this.game.enemies[0];\n                this.game.particles.push(this.game.enemy);\n                console.log(this.game.enemies);\n            }, 5000)\n        }\n    }\n\n    fire() {\n        if (this.loaded) {\n            for (let i = 45; i < 405; i += 10) {\n                let bullet = new EnemyParticle(game, 10, [this.x, this.y], [.5 * Math.sin(i), .5 * Math.cos(i)]);\n                // setTimeout(() => {\n                    this.game.add(bullet);\n                // }, 50);\n                \n            }\n            this.loaded = false;\n            setTimeout(() => {\n                this.loaded = true;\n            }, 1500)\n        } else {\n            return;\n        }\n    }\n\n    fire2() {\n        if (this.loaded2) {\n            for (let i = 0; i < 360; i += 10) {\n                let bullet = new EnemyParticle(game, 10, [this.x, this.y], [Math.sin(i), Math.cos(i)]);\n                this.game.add(bullet);\n            }\n            this.loaded2 = false;\n            setTimeout(() => {\n                this.loaded2 = true;\n            }, 4000)\n        }\n    }\n\n    draw() {\n        this.ctx.save();\n        // this.ctx.beginPath();\n        // this.ctx.arc(this.x, this.y, this.r, 2 * Math.PI, false);\n        // this.ctx.strokeStyle = \"#000\";\n        // this.ctx.fillStyle = \"#000\";\n        // this.ctx.shadowBlur = 5;\n        // this.ctx.shadowColor = \"white\";\n        this.ctx.drawImage(this.sheet, this.coords_x, this.coords_y, 160, 144, this.x - 150, this.y - 150, 300, 300);\n        // this.ctx.fill();\n        // this.ctx.closePath();\n        this.ctx.restore();\n    }\n}\n\nexport default Boss2;","import Boss from './enemy';\nimport EnemyParticle from './enemy_particle';\nimport ExplodingEnemyParticle from './enemy_exposion';\n\nconst PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\nclass Boss3 extends Boss {\n    constructor(game, level) {\n        super(game, level);\n        this.hp = 8000 * level;\n        this.og_hp = 8000 * level;\n        this.r = 100;\n        this.pos = [game.canvas.width-100, game.canvas.height / 2];\n        this.x = this.pos[0]\n        this.y = this.pos[1]\n        this.x_speed = .3;\n        this.y_speed = .3;\n        this.ctx = game.ctx;\n        this.game = game;\n        this.alive = true;\n\n        this.up = true;\n        this.down = false;\n        this.left = false;\n        this.right = false;\n    \n        this.loaded = true;\n        // this.loaded2 = true;\n        this.center = [this.game.canvas.width / 2, this.game.canvas.height / 2]\n\n        this.sheet = new Image();\n        this.sheet.src = `${PATH}/app/sorcerer_villain.png`;\n        this.coords_x = 0;\n        this.coords_y = 0;\n        this.forward = true;\n        this.frames = 0;\n    }\n\n    move(dt) {\n        if (this.up) {\n            this.y = this.y - this.y_speed * dt\n        } else if (this.down) {\n            this.y = this.y + this.y_speed * dt\n        } else if (this.left) {\n            this.x = this.x - this.x_speed * dt\n        } else if (this.right) {\n            this.x = this.x + this.x_speed * dt\n        }\n    }\n\n    dist(pos1, pos2) {\n        return Math.sqrt(\n            Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n        );\n    }\n\n    fire() {\n        if (this.loaded) {\n            \n            let bullet = new ExplodingEnemyParticle(this.game, \n                                10, \n                                [this.x, this.y], \n                                [\n                                (this.game.canvas.width / 2 - this.x) / (this.dist(this.center, [this.x, this.y])), \n                                \n                                (this.game.canvas.height / 2 - this.y) / (this.dist(this.center, [this.x, this.y]))\n                                ],\n                                25\n                                );\n\n            this.game.add(bullet)\n            bullet.explode();\n            this.loaded = false;\n\n            setTimeout(() => {\n                this.loaded = true;\n            }, 500)\n        } else {\n            return;\n        }\n    }\n\n    // fire2() {\n    //     if (this.loaded2) {\n    //         let bullet = new EnemyParticle(this.game,\n    //             10,\n    //             [this.x, this.y],\n    //             [\n    //                 (this.game.canvas.width / 2 - this.x) / (this.dist(this.center, [this.x, this.y])),\n\n    //                 (this.game.canvas.height / 2 - this.y) / (this.dist(this.center, [this.x, this.y]))\n    //             ],\n    //             10\n    //         );\n\n    //         this.game.add(bullet)\n    //         this.loaded2 = false;\n\n    //         setTimeout(() => {\n    //             this.loaded2 = true;\n    //         }, 250)\n    //     } else {\n    //         return;\n    //     }\n    // }\n\n    update(dt) {\n        if (this.y >= (this.game.canvas.height - this.r) && this.x >= (this.game.canvas.width - this.r) ) {\n            this.up = true;\n            this.down = false;\n        } else if (this.y <= this.r && this.x >= 100) {\n            this.left = true;\n            this.up = false;\n        } else if (this.x <= 100 && this.y <= (this.game.canvas.height - this.r)) {\n            this.left = false;\n            this.down = true;\n        } else if (this.down) {\n            this.down = false;\n            this.right = true;\n        }\n\n        if (this.frames === 10) {\n            if (this.forward) {\n                this.coords_x = this.coords_x + 200;\n                if (this.coords_x === 1800) {\n                    this.forward = !this.forward;\n                }\n            } else if (!this.forward) {\n                this.coords_x = this.coords_x - 200;\n                if (this.coords_x === 200) {\n                    this.forward = true;\n                }\n            }\n            this.frames = 0;\n        }\n\n        this.move(dt);\n        this.fire();\n        this.checkDead();\n        this.frames += 1;\n    }\n    checkDead() {\n        if (this.hp <= 0) {\n            this.alive = false;\n            this.pos = [];\n            this.x = null;\n            this.y = null;\n            this.r = 0;\n            this.game.enemies.shift();\n            this.game.enemies.push(new Boss3(this.game, this.game.level));\n            this.game.player.dmg = this.game.player.dmg * 1.1;\n            setTimeout(() => {\n                this.game.enemy = this.game.enemies[0];\n                this.game.particles.push(this.game.enemy);\n            }, 5000)\n        }\n    }\n\n    draw() {\n        this.ctx.save();\n        // this.ctx.beginPath();\n        // this.ctx.arc(this.x, this.y, this.r, 2 * Math.PI, false);\n        // this.ctx.strokeStyle = \"#000\";\n        // this.ctx.fillStyle = \"#000\";\n        // this.ctx.shadowBlur = 5;\n        // this.ctx.shadowColor = \"white\";\n        // this.ctx.fill();\n        // this.ctx.closePath();\n        this.ctx.drawImage(this.sheet, this.coords_x, this.coords_y, 200, 200, this.x - 100, this.y - 100, 300, 300);\n\n        this.ctx.restore();\n    }\n}\n\nexport default Boss3;","import Boss from './enemy';\nimport EnemyParticle from './enemy_particle';\nimport ExplodingEnemyParticle from './enemy_exposion';\n\nconst PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\nclass Boss4 extends Boss {\n    constructor(game, level) {\n        super(game);\n        this.hp = 9001 * level;\n        this.og_hp = 9001 * level;\n        this.r = 100;\n        this.pos = [game.canvas.width - 150, game.canvas.height -150];\n        this.x = this.pos[0]\n        this.y = this.pos[1]\n        this.x_speed = .3;\n        this.y_speed = .3;\n        this.ctx = game.ctx;\n        this.game = game;\n        this.alive = true;\n        this.level = level;\n        this.up = true;\n        this.down = false;\n        this.left = false;\n        this.right = false;\n\n        this.loaded = true;\n        this.loaded2 = true;\n        this.loaded3 = true;\n        this.aim = [this.game.player.x, this.game.player.y];\n        this.center = [this.game.canvas.width / 2, this.game.canvas.height / 2];\n\n        this.sheet = new Image();\n        this.sheet.src = `${PATH}/app/enemy4.png`;\n        this.coords_x = 0;\n        this.coords_y = 0;\n        this.forward = true;\n        this.frames = 0;\n    }\n\n    move(dt) {\n        if (this.up) {\n            this.y = this.y - this.y_speed * dt\n        } else if (this.down) {\n            this.y = this.y + this.y_speed * dt\n        } else if (this.left) {\n            this.x = this.x - this.x_speed * dt\n        } else if (this.right) {\n            this.x = this.x + this.x_speed * dt\n        }\n    }\n\n    dist(pos1, pos2) {\n        return Math.sqrt(\n            Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n        );\n    }\n\n    fire() {\n        if (this.loaded) {\n            let bullet = new EnemyParticle(\n                this.game,\n                10,\n                [this.x, this.y],\n                [\n                    (this.game.player.x - this.x) / (this.dist(this.aim, [this.x, this.y])) * 2,\n\n                    ((this.game.player.y - this.y) / (this.dist(this.aim, [this.x, this.y]))) * 2\n                ],\n                15 * this.level)\n            this.game.add(bullet);\n            this.loaded = false;\n            setTimeout(() => {\n                this.loaded = true;\n            }, 1000)\n            console.log(this.level);\n        }\n    }\n\n    fire2() {\n        if (this.loaded2)  {\n            for (let i = 0; i <= 360; i += 20) {\n                let bullet = new EnemyParticle(game, 10, [this.x, this.y], [.5 * Math.sin(i), .5 * Math.cos(i)]);\n                this.game.add(bullet);\n                }\n            setTimeout(()=> {\n                for (let i = 15; i <= 375; i += 20) {\n                    let bullet = new EnemyParticle(game, 10, [this.x, this.y], [.5 * Math.sin(i), .5 * Math.cos(i)]);\n                    this.game.add(bullet);\n                }\n            }, 100)\n            setTimeout(() => {\n                for (let i = 30; i <= 390; i += 20) {\n                    let bullet = new EnemyParticle(game, 10, [this.x, this.y], [.5 * Math.sin(i), .5 * Math.cos(i)]);\n                    this.game.add(bullet);\n                }\n            }, 200)\n            setTimeout(() => {\n                for (let i = 45; i <= 405; i += 20) {\n                    let bullet = new EnemyParticle(game, 10, [this.x, this.y], [.5 * Math.sin(i), .5 * Math.cos(i)]);\n                    this.game.add(bullet);\n                }\n            }, 300)\n            this.loaded2 = false\n            setTimeout(() => {\n                this.loaded2 = true;\n            }, 2000)\n            }\n    }\n            \n    fire3() {\n        if (this.loaded3) {\n\n            let bullet = new ExplodingEnemyParticle(this.game,\n                10,\n                [this.x, this.y],\n                [\n                    (this.game.canvas.width / 2 - this.x) / (this.dist(this.center, [this.x, this.y])),\n\n                    (this.game.canvas.height / 2 - this.y) / (this.dist(this.center, [this.x, this.y]))\n                ],\n                25\n            );\n\n            this.game.add(bullet)\n            bullet.explode();\n            this.loaded3 = false;\n\n            setTimeout(() => {\n                this.loaded3 = true;\n            }, 1500)\n        } else {\n            return;\n        }\n    }    \n\n\n    update(dt) {\n        if (this.y >= (this.game.canvas.height - this.r) && this.x >= (this.game.canvas.width - this.r)) {\n            this.up = true;\n            this.down = false;\n        } else if (this.y <= this.r && this.x >= 100) {\n            this.left = true;\n            this.up = false;\n        } else if (this.x <= 100 && this.y <= (this.game.canvas.height - this.r)) {\n            this.left = false;\n            this.down = true;\n        } else if (this.down) {\n            this.down = false;\n            this.right = true;\n        }\n\n        if (this.frames === 10) {\n            if (this.forward) {\n                this.coords_x = this.coords_x + 80;\n                if (this.coords_x === 880) {\n                    this.forward = !this.forward;\n                }\n            } else if (!this.forward) {\n                this.coords_x = this.coords_x - 80;\n                if (this.coords_x === 80) {\n                    this.forward = true;\n                }\n            }\n            this.frames = 0;\n        }\n\n        this.move(dt);\n        this.fire();\n        this.fire2();\n        this.fire3();\n        this.checkDead();\n        this.frames += 1;\n    }\n    checkDead() {\n        if (this.hp <= 0) {\n            this.alive = false;\n            this.pos = [];\n            this.x = null;\n            this.y = null;\n            this.r = 0;\n            this.game.enemies.shift();\n            this.game.level = this.game.level + 1;\n            this.game.enemies.push(new Boss4(this.game, this.game.level));\n            setTimeout(() => {\n                this.game.enemy = this.game.enemies[0];\n                this.game.particles.push(this.game.enemy);\n            }, 5000)\n        }\n    }\n\n    draw() {\n        this.ctx.save();\n        // this.ctx.beginPath();\n        // this.ctx.arc(this.x, this.y, this.r, 2 * Math.PI, false);\n        // this.ctx.strokeStyle = \"#000\";\n        this.ctx.fillStyle = \"#000\";\n        this.ctx.shadowBlur = 5;\n\n            this.ctx.drawImage(this.sheet, this.coords_x, this.coords_y, 80, 80, this.x - 150, this.y - 150, 300, 300);\n\n        // this.ctx.shadowColor = \"white\";\n        // this.ctx.fill();\n        // this.ctx.closePath();\n        this.ctx.restore();\n    }\n}\n\nexport default Boss4;","import EnemyParticle from \"./enemy_particle\";\n\nclass enemyExlodingParticle extends EnemyParticle {\n    constructor(game, r, pos, vel, dmg) {\n        super(game, r, pos, vel)\n        this.pos = pos.slice();\n        this.x = this.pos[0];\n        this.y = this.pos[1];\n        this.r = r * 3;\n        this.ctx = game.ctx;\n        this.vel = vel;\n        this.damage = dmg * 1.5;\n        this.alive = true;\n        this.game = game;\n    }\n\n    explode() {\n        setTimeout(() => {\n            for (let i = 0; i < 360; i += 20) {\n                let bullet = new EnemyParticle(game, 10, [this.x, this.y], [.5 * Math.sin(i), .5 * Math.cos(i)], 20);\n                // setTimeout(() => {\n                this.game.add(bullet);\n                // }, 50);\n                this.alive = false;\n            }\n        }, 500)\n    }\n}\n\nexport default enemyExlodingParticle;","import Particle from './particle';\nclass EnemyParticle {\n    constructor(game, r, pos, vel, dmg = 50) {\n        this.pos = pos.slice();\n        this.x = this.pos[0];\n        this.y = this.pos[1];\n        this.r = r;\n        this.ctx = game.ctx;\n        this.vel = vel;\n        this.damage = dmg;\n        this.alive = true;\n        this.game = game;\n    }\n\n    dist(pos1, pos2) {\n        return Math.sqrt(\n            Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n        );\n    }\n\n    enemyCollidesWith() {\n        if (this.dist([this.x, this.y], [this.game.player.x, this.game.player.y]) < (this.r + this.game.player.radius)) {\n            this.alive = false;\n            if (!this.game.player.invuln) {\n                if (this.game.player.hp - this.damage > 0) {\n                    this.game.player.hp -= this.damage;\n                } else {\n                    this.game.player.hp = 0;\n                }\n            }\n        }\n    }\n\n    update(dt) {\n        this.x = this.x + dt * this.vel[0];\n        this.y = this.y + dt * this.vel[1];\n    }\n\n\n    draw() {\n        this.ctx.save()\n        this.ctx.beginPath();\n        this.ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);\n        this.ctx.fillStyle = \"red\";\n        this.ctx.fill();\n        this.ctx.closePath();\n        this.ctx.restore();\n    }\n}\n\nexport default EnemyParticle;","import Player from './player';\nimport Particle from './particle';\nimport EnemyParticle from './enemy_particle';\nimport HUD from './hud';\nimport Enemy from './enemy';\nimport Enemy2 from './enemy2';\nimport Enemy3 from './enemy3';\nimport Enemy4 from './enemy4';\n\n\nconst PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\nclass Game {\n    constructor(ctx, canvas) {\n        this.canvas = canvas;\n        this.ctx = ctx;\n        this.loop = this.loop.bind(this);\n        this.dt = 0;\n        this.prevTime = Date.now();\n        this.particles = [];\n        this.enemies = [];\n        this.level = 1;\n        this.paused = false;\n        this.bg = new Image();\n        this.bg.src = `${PATH}/app/floor.png`;\n    }\n\n    add(object) {\n        if (object instanceof Particle || object instanceof EnemyParticle) {\n            this.particles.push(object);\n        }\n    }\n\n\n    checkBounds(particle) {\n        if (particle.x >= this.canvas.width || particle.x <= 0 || particle.y >= this.canvas.height || particle.y <= 0) {\n            particle.alive = false;\n        }\n    }\n\n    start() {\n        this.player = new Player(this);\n        this.player.mountController();\n        this.hud = new HUD(this);\n        this.enemy1 = new Enemy(this, this.level)\n        this.enemies.push(this.enemy1);\n        this.enemy2 = new Enemy2(this, this.level);\n        this.enemies.push(this.enemy2);\n        this.enemy3= new Enemy3(this, this.level);\n        this.enemies.push(this.enemy3)\n        this.enemy4 = new Enemy4(this, this.level);\n        this.enemies.push(this.enemy4)\n\n        this.enemy = this.enemies[0];\n        this.particles.push(this.player);\n        this.particles.push(this.enemies[0]);\n        this.paused = false;\n        this.started = true;\n\n        document.addEventListener('keydown', (e) => {\n            if (e.keyCode === 80) {\n                if (!this.paused) {\n                    this.paused = true;\n                } else if (this.paused) {\n                    this.paused = false;\n                }\n           }\n        })\n        this.loop();\n    }\n\n    loop() {\n        if (this.started) {\n            if (!this.paused) {\n                this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n                this.ctx.drawImage(this.bg, 0, 0, this.canvas.width, this.canvas.height);\n                this.particles = this.particles.filter(el => {\n                    if (el.alive) return el;\n                })\n                this.particles.forEach(el => {\n                    if (el.alive) {\n                        el.draw();\n                        el.update(this.dt);\n                        if (el instanceof Particle) {\n                            this.checkBounds(el);\n                            el.collidesWith();\n                        }\n                        if (el instanceof EnemyParticle) {\n                            this.checkBounds(el);\n                            el.enemyCollidesWith();\n                        }\n                    }\n                })\n                \n                this.hud.draw();\n\n                this.dt = Date.now() - this.prevTime;\n            }\n            this.prevTime = Date.now();\n            window.requestAnimationFrame(this.loop);\n        }\n    } \n}\n\nexport default Game;","import Game from './game';\n\nclass HUD {\n    constructor(game) {\n        this.game = game;\n        this.player = game.player;\n        this.ctx = game.ctx;\n        this.canvas = game.canvas;\n    }\n\n    draw() {\n        if (this.game.started) {\n            this.ctx.save();\n            this.ctx.beginPath();\n\n            this.ctx.fillStyle = '#32a852';\n            this.ctx.fillRect(10, 10, this.player.hp * 2, 20);\n            this.ctx.stroke();\n\n            this.ctx.fillStyle = 'yellow';\n            this.ctx.font = \"15px Arial\";\n            this.ctx.fillText(this.player.hp + \" / 300\", 20, 25);\n\n            this.ctx.beginPath();\n            this.ctx.fillStyle = '#00ffee';\n            this.ctx.fillRect(10, 30, this.player.charge * 3, 15);\n            this.ctx.stroke();\n\n            this.ctx.beginPath();\n            this.ctx.fillStyle = '#702413';\n            this.ctx.fillRect(10, this.canvas.height - 60, ((this.canvas.width - 20) *(this.game.enemy.hp / this.game.enemy.og_hp)), 25);\n            this.ctx.stroke();\n\n            this.ctx.restore();\n        }\n    }\n}\n\nexport default HUD;","// let canvas = document.createElement('canvas');\n// let width = 1200;\n// let height = 800;\n// canvas.width = width;\n// canvas.height = height;\n// let context = canvas.getContext('2d');\n// context.fillStyle = \"#222\";\n// context.fillRect(0, 0, width, height);\nimport Game from './game';\nimport Menu from './menu';\nimport Cursor from './cursor';\n\nconst PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\nwindow.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById('game');\n    const ctx = canvas.getContext('2d');\n        ctx.canvas.width = window.innerWidth;\n        ctx.canvas.height = window.innerHeight;\n\n            // const bgm = new Audio();\n    //         bgm.src = `${PATH}/app/GungeonUp.mp3`;\n    //         bgm.load();\n    //         bgm.play();\n            // bgm.loop = true;\n    \n    \n        const menu = new Menu(ctx, canvas);\n\n\n    menu.draw();\n})\n\n","import Game from './game';\nconst PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\n\nclass Menu {\n    constructor(ctx, canvas) {\n        this.game = null;\n        this.ctx = ctx;\n        this.canvas = canvas;\n\n        this.img = new Image();\n        this.img.src = `${PATH}/app/logo.png`;\n    }\n\n    gameStart(e) {\n        e.preventDefault();\n        if (!(this.game instanceof Game)) {\n            window.game = new Game(this.ctx, this.canvas);\n            this.game = window.game;\n            this.game.start();\n        } else {\n            return;\n        }\n    }\n\n    draw() {\n        this.ctx.save();\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        \n        this.ctx.fillStyle = '#000';\n        this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        \n        \n        this.ctx.fillStyle = '#fff';\n        this.ctx.font = \"30px Arial\";\n        this.ctx.textAlign = 'center';\n        this.ctx.shadowBlur = 5;\n        this.ctx.shadowColor = \"white\";\n\n        if (this.img.complete) {\n            this.ctx.drawImage(this.img,\n                                this.canvas.width / 2 - this.img.width / 2,\n                                this.canvas.height / 2 - this.img.height / 2 - this.canvas.height / 4)\n            } else {\n                let ctx = this.ctx;\n                let img = this.img;\n                this.img.onload = function() {\n                    ctx.drawImage(img,\n                        ctx.canvas.width / 2 -img.width / 2,\n                        ctx.canvas.height / 2 -img.height / 2 - ctx.canvas.height / 4)\n                }\n            }\n        this.ctx.fillText(\"Press Space to Start\",\n            this.canvas.width / 2,\n            this.canvas.height / 2);\n\n        this.ctx.font = \"20px Arial\";\n        this.ctx.textAlign = 'center';\n        this.ctx.fillText(\"WASD - Move Character\",\n            this.canvas.width / 2,\n            this.canvas.height - 300);\n        this.ctx.fillText(\"Q - Dash in the direction you are moving\",\n            this.canvas.width / 2,\n            this.canvas.height - 250);\n        this.ctx.fillText(\"E - Clear all enemy bullets\",\n            this.canvas.width / 2,\n            this.canvas.height - 200);\n        this.ctx.fillText(\"MOUSE LEFT - Shoot\",\n            this.canvas.width / 2,\n            this.canvas.height - 150);\n        this.ctx.fillText(\"MOUSE MOVE - Aim\",\n            this.canvas.width / 2,\n            this.canvas.height - 100);\n        this.ctx.fillText(\"P - Pause / Unpause \",\n            this.canvas.width / 2,\n            this.canvas.height - 50);\n        \n        document.addEventListener('keydown', (e) => {\n            if (e.keyCode === 32) {\n                this.gameStart(e);\n            }\n        })\n\n        this.ctx.restore();\n    }\n    \n}\n\nexport default Menu;","import Game from './game';\nimport Player from './player';\n// import Enemy from './enemy';\n\nclass Particle {\n    constructor(game, pos, crosshair, speed = 1, dmg = 100) {\n        this.pos = pos.slice();\n        this.crosshair = crosshair.slice();\n        this.x = this.pos[0];\n        this.y = this.pos[1];\n        this.r = 3;\n        this.ctx = game.ctx;\n        this.damage = dmg;\n        this.alive = true;\n        this.game = game;\n        this.length = (Math.sqrt((Math.pow(this.crosshair[1] - this.pos[1], 2)) + Math.pow(this.crosshair[0] - this.pos[0], 2)));\n        this.velDir = [((this.crosshair[0] - this.pos[0]) / this.length), ((this.crosshair[1] - this.pos[1]) / this.length)];\n        this.vel = [this.velDir[0] * speed, this.velDir[1] * speed];\n    }\n\n    dist(pos1, pos2) {\n        return Math.sqrt(\n            Math.pow(pos1[0] - pos2[0], 2) + Math.pow(pos1[1] - pos2[1], 2)\n        );\n    }\n\n    collidesWith() {\n        if (this.dist([this.x, this.y], [game.enemy.x, game.enemy.y]) < (this.r + game.enemy.r) ) {\n            this.alive = false;\n\n            if (game.player.charge < 90) {\n                (game.player.charge += 5);\n            } else {\n                game.player.charge = 100;\n            }\n\n            if (this.game.enemy.hp - this.damage > 0) {\n                this.game.enemy.hp -= this.damage;\n            } else if (this.game.enemy.hp - this.damage <= 0){\n                game.enemy.hp = 0;\n            }\n        }\n    }\n\n    update(dt) {\n        // let length = (Math.sqrt((Math.pow(this.crosshair[1] - this.pos[1], 2)) + Math.pow(this.crosshair[0] - this.pos[0], 2)))\n        // this.x = this.x + ((this.crosshair[0] - this.pos[0]) / length) * dt\n        // this.y = this.y + ((this.crosshair[1] - this.pos[1]) / length) * dt\n        this.x = this.x + this.vel[0] * dt;\n        this.y = this.y + this.vel[1] * dt;\n    }\n\n\n    draw() {\n        // this.ctx.save();\n        this.ctx.beginPath();\n        this.ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);\n        this.ctx.fillStyle = \"#00ffee\";\n        this.ctx.fill();\n        this.ctx.closePath();\n        // this.ctx.restore();\n    }\n}\n\nexport default Particle;","import Particle from './particle';\nimport EnemyParticle from './enemy_particle';\nimport Menu from './menu';\n//     W: 87,\n//     A: 65,\n//     S: 83,\n//     D: 68,\n//     ENTER: 13,\n//     UP: 38,\n//     DOWN: 40,\n//     SHIFT: 16,\n//     SPACE: 32,\n//     MOUSE_LEFT: 10000,\n//     MOUSE_RIGHT: 10002,\nconst PATH = document.URL.substr(0, document.URL.lastIndexOf('/'));\nclass Player {\n    constructor(game) {\n        this.game = game;\n        this.radius = 10;\n        this.pos = [game.canvas.width / 2, game.canvas.height / 2];\n        this.x = this.pos[0];\n        this.y = this.pos[1];\n        this.x_speed = .35;\n        this.y_speed = .35;\n        this.canvas = game.canvas;\n        this.ctx = game.ctx;\n        this.keyDown = {\n            87: false,\n            65: false,\n            83: false,\n            68: false,\n            16: false,\n        }\n        this.crosshair = [];\n        this.dashCooldown = 3000;\n        this.dashDisabled = false;\n        this.hp = 300;\n        this.invuln = false;\n        this.charge = 0;\n        this.alive = true;\n        this.powerUp1 = false;\n        this.dmg = 100;\n\n        this.sheet = new Image();\n        this.sheet.src = `${PATH}/app/stitchFire.png`;\n        this.coords_x = 0;\n        this.coords_y = 0;\n        this.forward = true;\n        this.frames = 0;\n    }\n\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        if (this.x < 0 ) {\n            this.x = 0;\n        } else if (this.y < 0) {\n            this.y = 0;\n        } else if (this.x + this.radius > this.canvas.width) {\n            this.x = this.canvas.width - this.radius;\n        } else if (this.y + this.radius > this.canvas.height) {\n            this.y = this.canvas.height - this.radius;\n        }\n    }\n\n    dash() {\n        if (!this.dashDisabled) {\n            this.x_speed = this.x_speed * 4;\n            this.y_speed = this.y_speed * 4;\n            this.invuln = true;\n            setTimeout(() => {\n                this.x_speed = this.x_speed / 4;\n                this.y_speed = this.y_speed / 4;\n                this.invuln = false;\n            }, 100);\n            this.dashDisabled = true;\n            setTimeout(() => this.dashDisabled = false, this.dashCooldown)\n        } else {\n            console.log('im on cooldown dude')\n        }\n    }\n\n    fire(game, pos, crosshair) {\n        if (this.powerUp1) {\n            if (Math.abs(crosshair[0] - pos[0]) < 100) {\n                let bullet = new Particle(game, pos, crosshair, 1, this.dmg);\n                this.game.add(bullet);\n                let bullet2 = new Particle(game, pos, [crosshair[0] + 30, crosshair[1]], 1, this.dmg);\n                this.game.add(bullet2);\n                let bullet3 = new Particle(game, pos, [Math.abs(30 - crosshair[0]), 1, crosshair[1]], this.dmg);\n                this.game.add(bullet3); \n            } else {\n                let bullet = new Particle(game, pos, crosshair, 1, this.dmg);\n                this.game.add(bullet);\n                let bullet2 = new Particle(game, pos, [crosshair[0], crosshair[1] + 30], 1, this.dmg);\n                this.game.add(bullet2);\n                let bullet3 = new Particle(game, pos, [crosshair[0], Math.abs(30 - crosshair[1])], 1, this.dmg);\n                this.game.add(bullet3);   \n            } \n        } else {\n            let bullet = new Particle(game, pos, crosshair, 1, this.dmg);\n            this.game.add(bullet);\n        }\n    }\n\n    checkDead() {\n        if (this.hp <= 0) {\n            this.alive = false;\n            this.pos = [];\n            this.x = null;\n            this.y = null;\n            window.game.particles.forEach(el => {\n                el.alive = false;\n            });\n            this.game.started = false;\n            let menu = new Menu(this.ctx, this.canvas);\n            menu.draw();\n        }\n    }\n\n    mountController() {\n        document.addEventListener('keydown', (e) => {\n            this.keyDown[e.keyCode] = true;\n        });\n\n        document.addEventListener('keyup', (e) => {\n            this.keyDown[e.keyCode] = false;\n        })\n\n        document.addEventListener('mousemove', (e) => {\n            this.setAim(e);\n        })\n\n        document.addEventListener('click', (e) => {\n            if (this.alive) {\n                this.fire(this.game, [this.x, this.y], this.crosshair);\n            }\n        })\n\n        document.addEventListener('keydown', (e) => {\n            switch (e.keyCode) {\n                case 69:\n                    if (this.charge >= 50) {\n                        this.chargeAtk();\n                    } else {\n                        console.log('you must construct additional pylons');\n                    }\n                    return;\n                case 81:\n                    this.dash(this.x_speed, this.y_speed);\n                    return;\n                case 187: \n                    this.charge += 100;\n                    return;\n                case 189:\n                    this.hp += 200;\n                    return;\n                case 8: \n                    this.hp = 0;\n                    return;\n                default:\n                    break;\n            }\n          \n        })\n    }\n\n    setAim(e) {\n        let temp = this.canvas.getBoundingClientRect();\n        this.crosshair = [e.clientX - temp.x, e.clientY - temp.y];\n    }\n\n    draw() {\n        this.ctx.save();\n        // this.ctx.beginPath();\n\n        // this.ctx.arc(this.x, this.y, this.radius, 2 * Math.PI, false);\n\n        // this.ctx.strokeStyle = \"#00f7ff\";\n        // this.ctx.lineWidth = 5;\n        // this.ctx.fillStyle = \"#00f7ff\";\n\n        this.ctx.shadowBlur = 5;\n        this.ctx.shadowColor = \"#00f7ff\";\n\n        this.ctx.drawImage(this.sheet, this.coords_x, this.coords_y, 62, 43,\n                             this.x-20, this.y-20, 62, 43);\n\n        // this.ctx.fill();\n        // this.ctx.closePath();\n        this.ctx.restore();\n    }\n\n    chargeAtk() {\n        this.game.particles.forEach(el => {\n            if (el instanceof EnemyParticle) {\n                el.alive = false;\n            }\n        })\n        this.charge -= 50;\n    }\n\n    update(dt) {\n        if (this.keyDown[87]) {\n            this.move(0, -(this.y_speed) * dt);\n        }\n        if (this.keyDown[83]) {\n            this.move(0, (this.y_speed) * dt);\n        }\n        if (this.keyDown[65]) {\n            this.move(-(this.x_speed) * dt, 0);\n        }\n        if (this.keyDown[68]) {\n            this.move((this.x_speed) * dt, 0);\n        }\n        if (this.charge < 100) {\n            this.charge += .02;\n        }\n        if (this.frames === 10) {\n            if (this.forward) {\n                this.coords_x = this.coords_x + 62;\n                if (this.coords_x === 186) {\n                    this.forward = !this.forward;\n                }\n            } else if (!this.forward) {\n                this.coords_x = this.coords_x - 62;\n                if (this.coords_x === 62) {\n                    this.forward = true;\n                }\n            }\n            this.frames = 0;\n        }\n        this.checkDead()\n        this.frames += 1;\n    }\n}\n\nexport default Player;"],"sourceRoot":""}